{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1EdcTWFYdwFySDfG91-_JuzcGpxt8l0ly","timestamp":1665084820689}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sYSsPKjMXDpb","executionInfo":{"status":"ok","timestamp":1665083723182,"user_tz":-180,"elapsed":2798,"user":{"displayName":"Utku Tuncabayın","userId":"09759106103613740197"}},"outputId":"28bddef0-12dc-49ce-8a15-f4dd8b30d0b4"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["import os\n","\n","project_folder = \"/content/drive/MyDrive/Colab Notebooks/Project\"\n","spectrogram_folder = os.path.join(project_folder, 'spectrograms')"],"metadata":{"id":"banCVlmyXLR3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import cv2\n","\n","IMG_HEIGHT = 64\n","IMG_WIDTH = 64\n","dataset = []\n","\n","def get_images_labels(file_folder):\n","  for root, directory, filenames in os.walk(file_folder):\n","    for filename in filenames:\n","      if filename.endswith(\"png\"):\n","        read_images = cv2.imread(os.path.join(root, filename), 1)  # 0: cv2.IMREAD_GRAYSCALE; 1: cv2.IMREAD_COLOR; -1: cv2.IMREAD_UNCHANGED                                          \n","        read_images = cv2.resize(read_images, dsize=(IMG_WIDTH, IMG_HEIGHT))  # resizing; interpolation=cv2.INTER_AREA\n","        read_images = cv2.cvtColor(read_images, cv2.COLOR_BGR2GRAY)  #grayscaling\n","        label_name = os.path.basename(root)\n","        grayscale_images = read_images / 255  # normalizing\n","        dataset.append([grayscale_images, label_name])\n","  return dataset"],"metadata":{"id":"zW7z5VMKXR3A"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import numpy as np\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.model_selection import train_test_split\n","\n","def data_preprocessing():\n","  encoder = LabelEncoder()\n","  obj_data = get_images_labels(spectrogram_folder)\n","\n","  image_data = np.array([obj_data[image_loc][0] for image_loc in range(len(obj_data))])\n","  image_data = image_data.reshape(image_data.shape[0], image_data.shape[1], image_data.shape[2], 1)\n","\n","  label_data = np.array([obj_data[image_loc][1] for image_loc in range(len(obj_data))])\n","  label_data = encoder.fit_transform(label_data)\n","\n","  X_train, X_test, y_train, y_test = train_test_split(image_data, label_data, train_size=0.87, random_state=42)\n","\n","  X_val = X_train[6460:]\n","  y_val = y_train[6460:]\n","  X_train = X_train[:6460]\n","  y_train = y_train[:6460]\n","\n","  return X_train, X_test, X_val, y_train, y_test, y_val"],"metadata":{"id":"ihCd1sXtYaH7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x_train, x_test, x_val, y_train, y_test, y_val = data_preprocessing()"],"metadata":{"id":"_D0zGr_Ki6ck"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(x_train.shape, x_val.shape)\n","print(y_train.shape, y_val.shape)\n","\n","# Print the lengths of the each dataset\n","print(f\"\\nX_train: {len(x_train)}\")\n","print(f\"y_train: {len(y_train)}\")\n","print(f\"X_val: {len(x_val)}\")\n","print(f\"y_val: {len(y_val)}\")\n","print(f\"x_test: {len(x_test)}\")\n","print(f\"y_test: {len(y_test)}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nM2JZLkAj1pr","executionInfo":{"status":"ok","timestamp":1665083777557,"user_tz":-180,"elapsed":19,"user":{"displayName":"Utku Tuncabayın","userId":"09759106103613740197"}},"outputId":"6dd8e463-ed9a-4c06-e86b-7cd783e0b2c4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(6460, 64, 64, 1) (1136, 64, 64, 1)\n","(6460,) (1136,)\n","\n","X_train: 6460\n","y_train: 6460\n","X_val: 1136\n","y_val: 1136\n","x_test: 1136\n","y_test: 1136\n"]}]},{"cell_type":"code","source":["import tensorflow as tf\n","from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout\n","from tensorflow.keras import Sequential,optimizers\n","\n","\n","def create_model(kernel_size: tuple, input_shape: tuple):\n","  model = Sequential()\n","  model.add(Conv2D(64,\n","                  kernel_size=kernel_size,\n","                  strides=(1,1),\n","                  padding=\"same\",\n","                  activation=\"relu\",\n","                  input_shape=input_shape)           \n","  )\n","  model.add(MaxPooling2D((2,2)))\n","  model.add(Conv2D(32,\n","                  kernel_size=kernel_size,\n","                  strides=(1,1),\n","                  padding=\"same\",\n","                  activation=\"relu\",\n","                  input_shape=input_shape)           \n","  )\n","\n","  model.add(Flatten())\n","  model.add(Dense(64, activation='relu')),\n","  model.add(Dropout(0.4))\n","  model.add(Dense(64, activation='relu'))\n","  model.add(Dropout(0.4))\n","  model.add(Dense(10, activation='softmax'))\n","\n","  model.compile(optimizer=optimizers.Adam(lr=0.0001), loss=\"sparse_categorical_crossentropy\", metrics=['accuracy'])\n","  # tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True)\n","  return model"],"metadata":{"id":"oQ-e4fwBkHLu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["my_model = create_model((3, 3), (IMG_WIDTH, IMG_HEIGHT, 1))\n","results = my_model.fit(x_train, y_train,\n","                    epochs=50,\n","                    batch_size=32,\n","                    validation_data = (x_val, y_val))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G7jeiwV8lDer","executionInfo":{"status":"ok","timestamp":1665084314367,"user_tz":-180,"elapsed":126894,"user":{"displayName":"Utku Tuncabayın","userId":"09759106103613740197"}},"outputId":"bc854501-7a73-407d-dc8b-58bb3d09517d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/50\n","202/202 [==============================] - 5s 21ms/step - loss: 2.0906 - accuracy: 0.2373 - val_loss: 1.7781 - val_accuracy: 0.3636\n","Epoch 2/50\n","202/202 [==============================] - 3s 14ms/step - loss: 1.8253 - accuracy: 0.3359 - val_loss: 1.5324 - val_accuracy: 0.5009\n","Epoch 3/50\n","202/202 [==============================] - 3s 14ms/step - loss: 1.6447 - accuracy: 0.4142 - val_loss: 1.3302 - val_accuracy: 0.5572\n","Epoch 4/50\n","202/202 [==============================] - 2s 9ms/step - loss: 1.5164 - accuracy: 0.4639 - val_loss: 1.2521 - val_accuracy: 0.6417\n","Epoch 5/50\n","202/202 [==============================] - 2s 11ms/step - loss: 1.4240 - accuracy: 0.4971 - val_loss: 1.1050 - val_accuracy: 0.6611\n","Epoch 6/50\n","202/202 [==============================] - 2s 11ms/step - loss: 1.3403 - accuracy: 0.5262 - val_loss: 1.0620 - val_accuracy: 0.6602\n","Epoch 7/50\n","202/202 [==============================] - 3s 14ms/step - loss: 1.2926 - accuracy: 0.5545 - val_loss: 1.0090 - val_accuracy: 0.6840\n","Epoch 8/50\n","202/202 [==============================] - 2s 12ms/step - loss: 1.2334 - accuracy: 0.5834 - val_loss: 0.9814 - val_accuracy: 0.6981\n","Epoch 9/50\n","202/202 [==============================] - 2s 12ms/step - loss: 1.1794 - accuracy: 0.6009 - val_loss: 0.9032 - val_accuracy: 0.7192\n","Epoch 10/50\n","202/202 [==============================] - 3s 13ms/step - loss: 1.1452 - accuracy: 0.6152 - val_loss: 0.9038 - val_accuracy: 0.7403\n","Epoch 11/50\n","202/202 [==============================] - 3s 16ms/step - loss: 1.0832 - accuracy: 0.6311 - val_loss: 0.8683 - val_accuracy: 0.7438\n","Epoch 12/50\n","202/202 [==============================] - 2s 9ms/step - loss: 1.0377 - accuracy: 0.6472 - val_loss: 0.8107 - val_accuracy: 0.7667\n","Epoch 13/50\n","202/202 [==============================] - 3s 13ms/step - loss: 1.0230 - accuracy: 0.6551 - val_loss: 0.7983 - val_accuracy: 0.7650\n","Epoch 14/50\n","202/202 [==============================] - 2s 9ms/step - loss: 0.9839 - accuracy: 0.6717 - val_loss: 0.7525 - val_accuracy: 0.7923\n","Epoch 15/50\n","202/202 [==============================] - 3s 13ms/step - loss: 0.9507 - accuracy: 0.6842 - val_loss: 0.7440 - val_accuracy: 0.8055\n","Epoch 16/50\n","202/202 [==============================] - 2s 12ms/step - loss: 0.9032 - accuracy: 0.7011 - val_loss: 0.7271 - val_accuracy: 0.7905\n","Epoch 17/50\n","202/202 [==============================] - 2s 11ms/step - loss: 0.8770 - accuracy: 0.7127 - val_loss: 0.7195 - val_accuracy: 0.7967\n","Epoch 18/50\n","202/202 [==============================] - 3s 13ms/step - loss: 0.8512 - accuracy: 0.7211 - val_loss: 0.6752 - val_accuracy: 0.8081\n","Epoch 19/50\n","202/202 [==============================] - 3s 13ms/step - loss: 0.8291 - accuracy: 0.7277 - val_loss: 0.6814 - val_accuracy: 0.8028\n","Epoch 20/50\n","202/202 [==============================] - 3s 17ms/step - loss: 0.8055 - accuracy: 0.7324 - val_loss: 0.6596 - val_accuracy: 0.8125\n","Epoch 21/50\n","202/202 [==============================] - 2s 9ms/step - loss: 0.7761 - accuracy: 0.7409 - val_loss: 0.6308 - val_accuracy: 0.8257\n","Epoch 22/50\n","202/202 [==============================] - 3s 13ms/step - loss: 0.7493 - accuracy: 0.7568 - val_loss: 0.6213 - val_accuracy: 0.8134\n","Epoch 23/50\n","202/202 [==============================] - 2s 11ms/step - loss: 0.7376 - accuracy: 0.7618 - val_loss: 0.6256 - val_accuracy: 0.8116\n","Epoch 24/50\n","202/202 [==============================] - 2s 12ms/step - loss: 0.6913 - accuracy: 0.7783 - val_loss: 0.5864 - val_accuracy: 0.8292\n","Epoch 25/50\n","202/202 [==============================] - 2s 11ms/step - loss: 0.6783 - accuracy: 0.7711 - val_loss: 0.5797 - val_accuracy: 0.8292\n","Epoch 26/50\n","202/202 [==============================] - 2s 9ms/step - loss: 0.6541 - accuracy: 0.7912 - val_loss: 0.5813 - val_accuracy: 0.8275\n","Epoch 27/50\n","202/202 [==============================] - 2s 9ms/step - loss: 0.6464 - accuracy: 0.7868 - val_loss: 0.5846 - val_accuracy: 0.8187\n","Epoch 28/50\n","202/202 [==============================] - 3s 14ms/step - loss: 0.6358 - accuracy: 0.7930 - val_loss: 0.5786 - val_accuracy: 0.8283\n","Epoch 29/50\n","202/202 [==============================] - 2s 10ms/step - loss: 0.6154 - accuracy: 0.8070 - val_loss: 0.5459 - val_accuracy: 0.8354\n","Epoch 30/50\n","202/202 [==============================] - 3s 13ms/step - loss: 0.5858 - accuracy: 0.8139 - val_loss: 0.5475 - val_accuracy: 0.8398\n","Epoch 31/50\n","202/202 [==============================] - 2s 12ms/step - loss: 0.5821 - accuracy: 0.8040 - val_loss: 0.5469 - val_accuracy: 0.8389\n","Epoch 32/50\n","202/202 [==============================] - 3s 13ms/step - loss: 0.5638 - accuracy: 0.8178 - val_loss: 0.5290 - val_accuracy: 0.8354\n","Epoch 33/50\n","202/202 [==============================] - 2s 9ms/step - loss: 0.5421 - accuracy: 0.8294 - val_loss: 0.5325 - val_accuracy: 0.8327\n","Epoch 34/50\n","202/202 [==============================] - 2s 12ms/step - loss: 0.5279 - accuracy: 0.8288 - val_loss: 0.5518 - val_accuracy: 0.8407\n","Epoch 35/50\n","202/202 [==============================] - 2s 12ms/step - loss: 0.5131 - accuracy: 0.8313 - val_loss: 0.5097 - val_accuracy: 0.8433\n","Epoch 36/50\n","202/202 [==============================] - 2s 10ms/step - loss: 0.5150 - accuracy: 0.8288 - val_loss: 0.5261 - val_accuracy: 0.8380\n","Epoch 37/50\n","202/202 [==============================] - 2s 12ms/step - loss: 0.4811 - accuracy: 0.8424 - val_loss: 0.5195 - val_accuracy: 0.8468\n","Epoch 38/50\n","202/202 [==============================] - 2s 9ms/step - loss: 0.4862 - accuracy: 0.8367 - val_loss: 0.5256 - val_accuracy: 0.8389\n","Epoch 39/50\n","202/202 [==============================] - 2s 12ms/step - loss: 0.4690 - accuracy: 0.8443 - val_loss: 0.5264 - val_accuracy: 0.8389\n","Epoch 40/50\n","202/202 [==============================] - 3s 14ms/step - loss: 0.4578 - accuracy: 0.8463 - val_loss: 0.5043 - val_accuracy: 0.8433\n","Epoch 41/50\n","202/202 [==============================] - 4s 18ms/step - loss: 0.4391 - accuracy: 0.8568 - val_loss: 0.5079 - val_accuracy: 0.8451\n","Epoch 42/50\n","202/202 [==============================] - 2s 9ms/step - loss: 0.4413 - accuracy: 0.8605 - val_loss: 0.5172 - val_accuracy: 0.8415\n","Epoch 43/50\n","202/202 [==============================] - 3s 15ms/step - loss: 0.4163 - accuracy: 0.8588 - val_loss: 0.4939 - val_accuracy: 0.8548\n","Epoch 44/50\n","202/202 [==============================] - 2s 10ms/step - loss: 0.4105 - accuracy: 0.8653 - val_loss: 0.4873 - val_accuracy: 0.8556\n","Epoch 45/50\n","202/202 [==============================] - 3s 14ms/step - loss: 0.3960 - accuracy: 0.8658 - val_loss: 0.4804 - val_accuracy: 0.8521\n","Epoch 46/50\n","202/202 [==============================] - 2s 9ms/step - loss: 0.3884 - accuracy: 0.8673 - val_loss: 0.5264 - val_accuracy: 0.8451\n","Epoch 47/50\n","202/202 [==============================] - 3s 15ms/step - loss: 0.3794 - accuracy: 0.8765 - val_loss: 0.4954 - val_accuracy: 0.8521\n","Epoch 48/50\n","202/202 [==============================] - 2s 10ms/step - loss: 0.3762 - accuracy: 0.8782 - val_loss: 0.4980 - val_accuracy: 0.8618\n","Epoch 49/50\n","202/202 [==============================] - 2s 12ms/step - loss: 0.3662 - accuracy: 0.8794 - val_loss: 0.4963 - val_accuracy: 0.8451\n","Epoch 50/50\n","202/202 [==============================] - 2s 9ms/step - loss: 0.3489 - accuracy: 0.8851 - val_loss: 0.5331 - val_accuracy: 0.8398\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","plt.plot(results.history[\"loss\"], label=\"Loss\")\n","plt.plot(results.history[\"val_loss\"], label=\"val_loss\")\n","plt.xlabel(\"Epoch\")\n","plt.ylabel(\"Loss\")\n","plt.legend()\n","plt.show()"],"metadata":{"id":"JO9Q3DUQljke","executionInfo":{"status":"ok","timestamp":1665084326726,"user_tz":-180,"elapsed":486,"user":{"displayName":"Utku Tuncabayın","userId":"09759106103613740197"}},"outputId":"c576a86e-7439-419e-cacd-6b7076d4f601","colab":{"base_uri":"https://localhost:8080/","height":279}},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["plt.plot(results.history[\"accuracy\"], label=\"Accuracy\")\n","plt.plot(results.history[\"val_accuracy\"], label=\"val_accuracy\")\n","plt.xlabel(\"Epoch\")\n","plt.ylabel(\"Accuracy\")\n","plt.legend()\n","plt.show()"],"metadata":{"id":"eBTfezs5lz54","executionInfo":{"status":"ok","timestamp":1665084329386,"user_tz":-180,"elapsed":14,"user":{"displayName":"Utku Tuncabayın","userId":"09759106103613740197"}},"outputId":"c625a3fe-b1ba-4f36-80cb-7a660ffaac9a","colab":{"base_uri":"https://localhost:8080/","height":279}},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# Evaluate the performance\n","my_model.evaluate(x_test, y_test)"],"metadata":{"id":"ts30a8fZl9P2","executionInfo":{"status":"ok","timestamp":1665084335653,"user_tz":-180,"elapsed":447,"user":{"displayName":"Utku Tuncabayın","userId":"09759106103613740197"}},"outputId":"500508c2-f690-461b-a21c-6d13a30f4d45","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["36/36 [==============================] - 0s 5ms/step - loss: 0.6272 - accuracy: 0.8283\n"]},{"output_type":"execute_result","data":{"text/plain":["[0.6272274851799011, 0.8283450603485107]"]},"metadata":{},"execution_count":115}]},{"cell_type":"code","source":["prediction_result = my_model.predict(x_test[610].reshape(1,64,64,1))\n","plt.imshow(prediction_result)\n","print(prediction_result)"],"metadata":{"id":"pPLtOoSll_pg","executionInfo":{"status":"ok","timestamp":1665084418369,"user_tz":-180,"elapsed":313,"user":{"displayName":"Utku Tuncabayın","userId":"09759106103613740197"}},"outputId":"d576ff2c-a85e-4e47-d506-f3cf00fd3897","colab":{"base_uri":"https://localhost:8080/","height":120}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1.2047622e-04 3.7717693e-06 4.4583227e-03 2.2939213e-03 2.7001381e-05\n","  7.7759381e-04 8.9488622e-06 3.6112635e-06 9.9130636e-01 9.9998526e-04]]\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["predicted_folder = prediction_result.argmax()\n","predicted_probability = prediction_result.max()"],"metadata":{"id":"SUTrY36pmGGT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(f\"This image belongs to folder {predicted_folder} with {predicted_probability}% probability\")"],"metadata":{"id":"vkJdeH1YmSi2","executionInfo":{"status":"ok","timestamp":1665084424257,"user_tz":-180,"elapsed":4,"user":{"displayName":"Utku Tuncabayın","userId":"09759106103613740197"}},"outputId":"7d6408a8-2cd9-4432-ab11-af4e1e69d46c","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["This image belongs to folder 8 with 0.9913063645362854% probability\n"]}]}]}